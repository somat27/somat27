name: Update TryHackMe badge

on:
  push:
    paths:
      - README.md
      - .github/workflows/update-thm-badge.yml
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: update-thm-badge
  cancel-in-progress: false

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      THM_USERNAME: Somat27
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Forçar regeneração + descarregar badge THM (PNG composto)
        id: fetch
        run: |
          set -euo pipefail

          BASE="https://tryhackme-badges.s3.amazonaws.com/${THM_USERNAME}.png"
          TMP="thm_badge.tmp"

          # valor por omissão: inválido (serve para condicionar os passos seguintes)
          echo "valid=false" >> "$GITHUB_OUTPUT"

          echo "A forçar regeneração no S3…"
          # trigger de update; não falha o job se der 403/404 pontual
          curl -fsS "${BASE}?update=1" -o /dev/null || true

          # pequeno atraso para a CDN propagar
          sleep 3

          echo "A descarregar PNG composto atualizado…"
          BUSTER=$(date +%s)
          curl -fsSL -H "Cache-Control: no-cache" "${BASE}?_=${BUSTER}" -o "$TMP"

          # Validar assinatura PNG (89 50 4E 47)
          if head -c 4 "$TMP" | xxd -p -c 4 | grep -qi '^89504e47$'; then
            mv "$TMP" thm_badge.png
            echo "valid=true" >> "$GITHUB_OUTPUT"
          else
            echo "Aviso: resposta não é PNG válido (a manter estado atual, sem commit)."
            file "$TMP" || true

            echo "Tentativa de fallback (sem cache-bust)…"
            curl -fsSL "${BASE}" -o "$TMP" || true
            if head -c 4 "$TMP" | xxd -p -c 4 | grep -qi '^89504e47$'; then
              mv "$TMP" thm_badge.png
              echo "valid=true" >> "$GITHUB_OUTPUT"
            else
              echo "Falha a obter PNG válido; a abortar atualização desta execução."
              rm -f "$TMP" || true
              exit 0
            fi
          fi

      - name: Ver headers do PNG remoto
        if: steps.fetch.outputs.valid == 'true'
        run: |
          BASE="https://tryhackme-badges.s3.amazonaws.com/${THM_USERNAME}.png"
          curl -sI "${BASE}" | sed -n '1,30p'

      - name: Debug – hashes HEAD vs novo
        if: steps.fetch.outputs.valid == 'true'
        run: |
          echo "Hash no commit (HEAD):"
          git show HEAD:thm_badge.png | sha256sum || echo "Ainda não existe no HEAD"
          echo "Hash após download:"
          sha256sum thm_badge.png

      - name: Commit se mudou (por hash)
        if: steps.fetch.outputs.valid == 'true'
        run: |
          set -e
          git config user.name "Tomás Gonçalves"
          git config user.email "70666298+somat27@users.noreply.github.com"

          # Se não existir no HEAD, comita já
          if ! git cat-file -e HEAD:thm_badge.png 2>/dev/null; then
            git add thm_badge.png
            git commit -m "chore: add THM badge"
            git push
            exit 0
          fi

          # Compara hashes HEAD vs ficheiro descarregado
          HEAD_HASH=$(git show HEAD:thm_badge.png | sha256sum | awk '{print $1}')
          NEW_HASH=$(sha256sum thm_badge.png | awk '{print $1}')

          echo "HEAD  = $HEAD_HASH"
          echo "NOVO  = $NEW_HASH"

          if [ "$HEAD_HASH" != "$NEW_HASH" ]; then
            git add thm_badge.png
            git commit -m "chore: update THM badge (auto)"
            git push
          else
            echo "Sem alterações (conteúdo idêntico)"
          fi
